group 'space.nerdsin.plugins'
version '1.0'

sourceCompatibility = 1.8

buildscript {
  repositories {
    mavenCentral()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath("nu.studer:gradle-jooq-plugin:${jooqGradleVersion}")
  }
}

apply plugin: 'java'
apply plugin: 'nu.studer.jooq'

jooq {
  //noinspection GroovyAssignabilityCheck
  version = jooqVersion
  edition = 'OSS'
  h2(sourceSets.main) {
    jdbc {
      driver = 'org.h2.Driver'
      url = 'jdbc:h2:mem:test'
    }
    generator {
      name = 'org.jooq.codegen.DefaultGenerator'
      strategy {
        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
      }
      //noinspection GroovyAssignabilityCheck
      database {
        name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
        properties {
          //noinspection GroovyAssignabilityCheck
          property {
            key = 'scripts'
            value = 'src/main/resources/db/h2/*'
          }
          //noinspection GroovyAssignabilityCheck
          property {
            key = 'sort'
            value = 'semantic'
          }
        }
        
        inputSchema = 'PUBLIC'
        outputSchemaToDefault = true
      }
      generate {}
      target {
        packageName = 'space.nerdsin.plugins.enhancedchat.codegen'
      }
    }
  }
}

dependencies {
  compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

  compile group: 'com.h2database', name: 'h2', version: h2DatabaseVersion
  jooqRuntime group: 'com.h2database', name: 'h2', version: h2DatabaseVersion

  compile group: 'org.jooq', name: 'jooq'
  jooqRuntime group: 'org.jooq', name: 'jooq-meta'
  jooqRuntime group: 'org.jooq', name: 'jooq-meta-extensions'
  jooqRuntime group: 'org.jooq', name: 'jooq-codegen'
  
  compile group: 'org.flywaydb', name: 'flyway-core', version: flywayCoreVersion
  
  compile group: 'com.google.inject', name: 'guice', version: guiceVersion
  compile group: 'org.reflections', name: 'reflections', version: reflectionsVersion
}

processResources {
  filesMatching('**/config.yml') {
    //noinspection UnnecessaryQualifiedReference
    filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [
        'database.filename' : project.property('database')
    ]);
  }
}
